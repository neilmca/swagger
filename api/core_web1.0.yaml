swagger: "2.0"
info:
  version: "1.0"
  title: Web API 1.0
  description: |
  
    Endpoints exposed from the Core Serve - Web path.
    
    Web root Url https://mtv.musicqubed.com/web/1.0

host: mtv.musicqubed.com
basePath: /web/1.0
schemes:
- https
consumes:
- application/json
produces:
- application/json
tags:
  - name: Vouchers
    description: |
     Defines endpoint to redeem a voucher
    

paths:
  
 /vouchers:
    put:
      description: |
      
        Redeems a voucher for a given user.  Response provides details of success or failure (and reason).
    
      tags:
      - Vouchers
      produces:
      - application/json
      parameters:
      - name: voucherCode
        in: query
        required: true
        x-is-map: false
        type: string
        description: Voucher Code
      - name: _REMEMBER_ME
        in: query
        required: true
        type: string
        description: token securely identifying user
      - name: community
        in: query
        required: true
        type: string
        description: Community
      responses:
        200:
          description: |
            (Ok) Voucher was successfully redeemed and the entitlement has been applied to the user.
            + Response body gives indication of the effect that redeeming the voucher has had to the user's account.
              + *billingExtension* - the date to when the user will next be billed has been extended. This would be returned when a user has redeemed a voucher and already had a recurring (e.g. PayPal) subscription. 
              + *expiryExtension* - the expiry date for the user has been extended. This would be returned when a user has redeemed a voucher and already had a one-time subscription e.g. a premium-pass. 
              + *newEntitlement* - the user has been granted new entitlement that they did not previously have. This would be returned when a user has redeemed a voucher and did not have any previous subscription.
          schema:
            type: object
            properties:
              effectOfRedemption:
                description: effect of redeeming the voucher. One of billingExtension, expiryExtension, newAccess. See above for detail.
                type: string
                enum: 
                - billingExtension
                - expiryExtension
                - newEntitlement
              user:
                description: first name, last name of the user who has redeemed the voucher
                type: object
                properties:
                    firstName:
                      description: first name of user
                      type: string
                    lastName:
                      description: last name of user
                      type: string
                required:
                - firstName
                - lastName
              voucherDuration:
                description: length, in days of the voucher entitlement
                type: number
                format: double
            required:
            - effectOfRedemption
            - user
            - voucherDuration
          examples:
            effectOfRedemption: billingExtension
            user:
              firstName: Phil
              lastName: Collins
            voucherDuration: 14
            
         
            
        302:
          description: |
            (Found) is sent back in case voucher redemption was not fully completed. But may still successfully complete after some time.
        401:
          description: |
            (Unauthorized) is sent back in case request failed to pass security context validation.
        404:
          description: |
            (Not Found) is sent back for reasons below
              + NotActive - the voucher cannot be redeemed as it is inactive\n    + NotRecognized - the voucher code was not recognized.
              + NotStarted - the voucher cannot be redeemed as the start date is in the future.
          schema:
            type: object
            properties:
              status: 
                description:  Error status
                example: NotRecognized
                type: string
                enum:
                - NotActive
                - NotRecognized
                - NotStarted
              errorMessage:
                description: error description
                example: Voucher is not recognized
                type: string
        409:
          description: |
            (Conflict) is sent back or reasons below
              + Redeemed -  the voucher is already redeemed
              + iTunesSubscribed - the voucher cannot be redeemed as the user is already subscribed via iTunes
              + PaymentPending - redemption cannot be applied at present because user state does not allow it. (E.g if user state is pending payment processing)
          schema:
            type: object
            properties:
              status: 
                description:  Error status
                type: string
                example: PaymentPending
                enum:
                - Redeemed
                - PaymentPending
                - iTunesSubscribed
              errorMessage:
                description: error description
                example: voucher redemption already in progress
                type: string
          
            
                
        410:
          description: |
            (Gone) is sent back n case request failed as voucher has expired
          schema:
            type: object
            properties:
              errorMessage:
                description: error description
                example: voucher has expired
                type: string
         
                 

    

                
            
  
  